{"version":3,"sources":["components/Blog.js","services/blogService.js","services/loginService.js","components/Notification.js","components/AddBlog.js","components/LoginForm.js","components/Togglable.js","App.js","index.js"],"names":["Blog","blog","handleBlogUpdate","handleBlogDelete","blogStyle","paddingTop","paddingLeft","border","borderWidth","marginBottom","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","curr","window","localStorage","getItem","parsed","JSON","parse","style","className","title","author","id","onClick","url","likes","newBlog","user","name","username","confirm","displayName","baseUrl","token","getAll","a","axios","get","resp","data","addBlog","cfg","headers","Authorization","post","setToken","newToken","updateBlog","put","deleteBlog","blogId","delete","signIn","obj","message","type","Addblog","handleBlogAdd","newTitle","setTitle","newAuthor","setAuthor","newUrl","setUrl","onSubmit","event","preventDefault","value","onChange","target","LoginForm","handleLogin","setUsername","password","setPassword","Togglable","React","forwardRef","props","ref","useImperativeHandle","buttonLabel","children","App","blogs","setBlogs","setUser","Message","setMessage","useEffect","blogService","then","sort","b","isLoggedIn","blogFormRef","useRef","newObj","loginService","setItem","stringify","setTimeout","updObj","newblogs","map","filter","handeBlogAdd","current","upd","Notification","clear","AddBlog","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91908846.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst Blog = ({ blog, handleBlogUpdate,handleBlogDelete }) => {\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n  const addLikes = () => {\n    const newBlog = { ...blog }\n    newBlog.likes = newBlog.likes +1\n    handleBlogUpdate(newBlog)\n  }\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n  const deleteBlog = () => {\n    if(window.confirm(`Remove blog ${blog.title} by ${blog.author}`)){\n      handleBlogDelete(blog.id)\n      setVisible(!visible)\n    }\n  }\n  const curr = window.localStorage.getItem('loggedUser')\n  const parsed = JSON.parse(curr)\n  return (\n    <div>\n      <div style={hideWhenVisible} className=\"togglableContent0\">\n        <div style={blogStyle}>\n          <div className=\"blogs\">\n          | Title : {blog.title} | Author : {blog.author} |\n            <button id = 'view-button' onClick={toggleVisibility}>view</button>\n          </div>\n        </div>\n      </div>\n      <div style={showWhenVisible} className= 'togglableContent1'>\n        <div style={blogStyle}>\n          <div key = {blog.id} className=\"blogs\">\n      | Title : {blog.title} | Author : {blog.author} |\n            <button id = 'hide-button' onClick={toggleVisibility}>hide</button>\n            <p>url : {blog.url}</p>\n            <p className =\"likes-count\">likes {blog.likes} <button onClick={addLikes}>add</button></p>\n            <p>{blog.user.name}</p>\n            {parsed ? parsed.username === blog.user.username ? <p><button onClick={deleteBlog}>delete</button></p> : <></>:<></>}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nBlog.displayName = 'Blog'\nBlog.propTypes = {\n  blog: PropTypes.object.isRequired,\n  handleBlogUpdate: PropTypes.func.isRequired,\n  handleBlogDelete: PropTypes.func.isRequired\n}\nexport default Blog\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken  = (newToken) => {\n  token  = `bearer ${newToken}`\n}\nconst getAll = async () => {\n  const resp = await axios.get(baseUrl)\n  return resp.data\n}\nconst addBlog = async newBlog => {\n  const cfg = {\n    headers : { Authorization : token }\n  }\n  const resp = await axios.post(baseUrl,newBlog,cfg)\n  return resp.data\n}\nconst updateBlog = async (newBlog) => {\n  const resp = await axios.put(baseUrl+`/${newBlog.id}`,newBlog)\n  return resp.data\n}\nconst deleteBlog= async (blogId) => {\n  const cfg = {\n    headers : { Authorization : token }\n  }\n  await axios.delete(baseUrl + `/${blogId}`,cfg)\n}\n\nexport default {\n  getAll,\n  addBlog,\n  setToken,\n  updateBlog,\n  deleteBlog\n}","import axios from 'axios'\n\nconst baserUrl = '/api/login'\n\n\nconst signIn = async (obj) => {\n  const resp = await axios.post(baserUrl,obj)\n  return resp.data\n}\n\nexport default {\n  signIn\n}","import React from 'react'\n\nexport default ({ message,type }) => {\n  if(message===null) return <></>\n  else if (type === 'succ'){\n    return (\n      <div className=\"success\">\n        {message}\n      </div>\n    )\n  }\n  else {\n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n}\n","import React, { useState } from 'react'\n\nconst Addblog = ({ handleBlogAdd }) => {\n  const [newTitle,setTitle] = useState('')\n  const [newAuthor,setAuthor] = useState('')\n  const [newUrl , setUrl] = useState('')\n  const addBlog = (event) => {\n    event.preventDefault()\n    const newBlog = {\n      title : newTitle,\n      author : newAuthor,\n      url : newUrl,\n      likes : 0\n    }\n    handleBlogAdd(newBlog)\n    setAuthor('')\n    setTitle('')\n    setUrl('')\n  }\n  return(\n    <form onSubmit={addBlog}>\n      <h1 className=\"titles\">Add new blog</h1>\n      <div>\n      title : <input id=\"title\" value={newTitle} onChange={({ target }) => {setTitle(target.value)}}></input>\n      </div>\n      <div>\n      author : <input id = \"author\" value={newAuthor} onChange={({ target }) => {setAuthor(target.value)}}></input>\n      </div>\n      <div>\n      url : <input id= \"url\" value={newUrl} onChange={({ target }) => {setUrl(target.value)}}></input>\n      </div>\n      <button id = 'add-blog-button' type=\"submit\">Add</button>\n    </form>\n  )\n}\nAddblog.displayName = 'Addblog'\nexport default Addblog","import React,{ useState }from 'react'\n\nconst LoginForm =  ({ handleLogin }) => {\n  const [username,setUsername] = useState('')\n  const [password,setPassword] = useState('')\n  const Login = (event) => {\n    event.preventDefault()\n    const newobj = {\n      username : username,\n      password : password\n    }\n    handleLogin(newobj)\n    setUsername('')\n    setPassword('')\n  }\n  return(\n    <div>\n      <h1>Login into account</h1>\n      <form onSubmit={Login}>\n        <div>\n            username\n          <input\n            id = 'username'\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n            password\n          <input\n            id = 'password'\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button id ='login-button' type=\"submit\">login</button>\n      </form>\n    </div>\n  )\n}\nLoginForm.displayName= 'LoginForm'\n\nexport default LoginForm\n","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\nTogglable.displayName = 'Togglable'\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\nexport default Togglable","import React, { useState, useEffect , useRef } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogService'\nimport loginService from  './services/loginService'\nimport Notification from './components/Notification'\nimport AddBlog  from './components/AddBlog'\nimport LoginForm from './components/LoginForm'\nimport TogglableComponent from './components/Togglable'\n\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [user,setUser] = useState(null)\n  const [Message, setMessage] = useState({ message : null,type : null })\n  useEffect(() => {\n    blogService.getAll().then(blogs => {\n      blogs.sort((a, b) => a.likes < b.likes ? 1 : (a.likes  > b.likes ? -1 :0))\n      setBlogs(blogs)\n    }\n    )\n  }, [])\n  useEffect(() => {\n    const isLoggedIn = window.localStorage.getItem('loggedUser')\n    if(isLoggedIn){\n      const parsed = JSON.parse(isLoggedIn)\n      setUser(parsed)\n      blogService.setToken(parsed.token)\n    }\n  },[])\n  const blogFormRef = useRef()\n  const handleLogin = async (newObj) => {\n    try{\n      const resp = await loginService.signIn(newObj)\n      window.localStorage.setItem('loggedUser',JSON.stringify(resp))\n      setUser(resp)\n      blogService.setToken(resp.token)\n    }\n    catch(error){\n      setMessage({\n        message : 'invalid username or password',\n        type : 'err'\n      }\n      )\n      setTimeout(() => {\n        setMessage({\n          message : null,\n          type : null\n        })\n      }, 5000)\n    }\n\n  }\n  const handleBlogUpdate = async (updObj) => {\n    try{\n      const resp = await blogService.updateBlog(updObj)\n      let newblogs = blogs.map(blog => blog.id === resp.id ? updObj : blog)\n      newblogs.sort((a, b) => a.likes < b.likes ? 1 : (a.likes  > b.likes ? -1 :0))\n      setBlogs(newblogs)\n    }\n    catch(error){\n      setMessage({\n        message : 'something went wrong',\n        type : 'err'\n      }\n      )\n      setTimeout(() => {\n        setMessage({\n          message : null,\n          type : null\n        })\n      }, 5000)\n    }\n  }\n  const handleBlogDelete = async (blogId) => {\n    try{\n      await blogService.deleteBlog(blogId)\n      setMessage({\n        message : 'blog deleted succesfully' ,\n        type : 'succ'\n      }\n      )\n      setTimeout(() => {\n        setMessage({\n          message : null,\n          type : null\n        })\n      }, 5000)\n    }\n    catch(error){\n      setMessage({\n        message : 'something went wrong',\n        type : 'err'\n      }\n      )\n      setTimeout(() => {\n        setMessage({\n          message : null,\n          type : null\n        })\n      }, 5000)\n    }\n    const newblogs = blogs.filter(blog => blog.id !== blogId)\n    setBlogs(newblogs)\n  }\n  const handeBlogAdd = async (newObj) => {\n    try{\n      const resp = await blogService.addBlog(newObj)\n      blogFormRef.current.toggleVisibility()\n      const upd = await blogService.getAll()\n      setBlogs(upd)\n      setMessage({\n        message : `a new blog ${resp.title} by ${resp.author} added` ,\n        type : 'succ'\n      }\n      )\n      setTimeout(() => {\n        setMessage({\n          message : null,\n          type : null\n        })\n      }, 5000)\n    }\n    catch(error){\n      setMessage({\n        message : 'something went wrong',\n        type : 'err'\n      }\n      )\n      setTimeout(() => {\n        setMessage({\n          message : null,\n          type : null\n        })\n      }, 5000)\n    }\n  }\n  const loggedInForm = () => {\n    return (\n      <div>\n        <h2>{user.name} logged in <button onClick = {() => {setUser(null); window.localStorage.clear()}}>log out</button></h2>\n        <TogglableComponent buttonLabel = \"create new blog\" ref={blogFormRef}>\n          <AddBlog handleBlogAdd={handeBlogAdd}/>\n        </TogglableComponent>\n        <h1 className=\"titles\">All blogs</h1>\n        {\n          blogs.map(blog => {\n            return(\n              <div key = {blog.id}>\n                <Blog  blog ={blog} handleBlogUpdate={handleBlogUpdate} handleBlogDelete ={handleBlogDelete}/>\n              </div>)\n          })\n        }\n      </div>\n    )\n  }\n  const loggedOutForm = () => {\n    return(\n      <LoginForm handleLogin={handleLogin}/>\n    )\n  }\n\n  return (\n    <div>\n      <Notification message={Message.message} type={Message.type}/>\n      {user === null ? loggedOutForm() : loggedInForm()}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}